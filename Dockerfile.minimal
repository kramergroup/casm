FROM ubuntu:latest

#  $ docker build . -t continuumio/miniconda3:latest -t continuumio/miniconda3:4.5.11
#  $ docker run --rm -it continuumio/miniconda3:latest /bin/bash
#  $ docker push continuumio/miniconda3:latest
#  $ docker push continuumio/miniconda3:4.5.11

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV PATH /opt/conda/bin:$PATH

ARG CASM_NCPU 4

RUN apt-get update --fix-missing && \
    apt-get install -y wget bzip2 ca-certificates curl git && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.11-Linux-x86_64.sh -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    /opt/conda/bin/conda clean -tipsy && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc

ENV TINI_VERSION v0.16.1
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini
RUN chmod +x /usr/bin/tini

RUN apt-get update && \
    apt-get install -y autoconf build-essential libtool libboost-all-dev zlib1g-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN git clone https://github.com/prisms-center/CASMcode.git /tmp/casm
RUN . /opt/conda/etc/profile.d/conda.sh && \
    conda activate base && \
    cd /tmp/casm && \
    bash build.sh || true && \
    ./configure && \
    make

ENTRYPOINT [ "/usr/bin/tini", "--" ]
CMD [ "/bin/bash" ]

# Obtain VASP pseudo-potentials
# -----------------------------
# The pseudo-potentials cannot be publicly distributed due to license constrains.
# This build container obtains them from a private S3 store such as minio
# using the S3_HOST and access-key and secret arguments
FROM minio/mc as s3

ARG S3_HOST
ARG S3_ACCESS_KEY_ID
ARG S3_SECRET_ACCESS_KEY

RUN mc config host add --insecure minio https://$S3_HOST $S3_ACCESS_KEY_ID $S3_SECRET_ACCESS_KEY
RUN mc --insecure cp minio/vasp/vasp5_psps.tar.gz /tmp/vasp5_psps.tar.gz

WORKDIR /VASP5_psps
RUN tar xvzf /tmp/vasp5_psps.tar.gz 

FROM ubuntu 

COPY --from=0 /tmp/casm/.libs/*.so /lib/
COPY --from=0 /tmp/casm/.libs/ccasm /bin/casm
COPY --from=0 /usr/lib/x86_64-linux-gnu/libboost_system* /usr/lib/x86_64-linux-gnu/
COPY --from=0 /usr/lib/x86_64-linux-gnu/libboost_filesystem* /usr/lib/x86_64-linux-gnu/
COPY --from=0 /usr/lib/x86_64-linux-gnu/libboost_program* /usr/lib/x86_64-linux-gnu/
COPY --from=0 /usr/lib/x86_64-linux-gnu/libboost_regex* /usr/lib/x86_64-linux-gnu/
COPY --from=0 /usr/lib/x86_64-linux-gnu/libboost_chrono* /usr/lib/x86_64-linux-gnu/
COPY --from=0 /usr/lib/x86_64-linux-gnu/libicu* /usr/lib/x86_64-linux-gnu/
COPY --from=1 /VASP5_psps /VASP5_psps

ENV POTCAR_DIR_PATH /VASP5_psps

VOLUME /data
WORKDIR /data



ENTRYPOINT [ "/bin/casm" ]